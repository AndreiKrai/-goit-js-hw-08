{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,kBAEvCF,EAAQG,iBAAiB,SAMzB,SAAqBC,GACnBC,EAASD,EAAME,OAAOC,MAAQH,EAAME,OAAOE,MAC3CC,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUP,G,IAP7DL,EAAQG,iBAAiB,UAsBzB,SAAsBC,GACpBA,EAAMS,iBACNJ,aAAaK,WAAW,uBACxBV,EAAMW,cAAcC,O,IAxBtBC,OAAOd,iBAAiB,QASxB,SAAoBC,GAClB,MAAMc,EAAcT,aAAaU,QAAQ,uBACzC,IAAKD,EAAa,OAClB,MAAME,EAAiBT,KAAKU,MAAMH,GAClCI,QAAQC,IAAIH,GAE0F,IAAjG,MAAMI,KAAOJ,EAChBpB,EAAQyB,SAASD,GAAKhB,MAAQY,EAAeI,E,IAdjD,IAAInB,EAAW","sources":["src/js/03-feedback.js"],"sourcesContent":["const inputEl = document.querySelector('.feedback-form');\n\ninputEl.addEventListener('input', onFormInput);\ninputEl.addEventListener('submit', onFormSubmit);\nwindow.addEventListener('load', onPageLoad);\n\nlet formData = {};\n\nfunction onFormInput(event) {\n  formData[event.target.name] = event.target.value;\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\nfunction onPageLoad(event) {\n  const storageData = localStorage.getItem('feedback-form-state');\n  if (!storageData) return;\n  const storageDataObj = JSON.parse(storageData);\n  console.log(storageDataObj);\n  // використовуємо функцію для переборупо ключам та постановки значення. Використовуємо цикл, бо полів інпуту може бути і 100шт.\n  for (const key in storageDataObj) {\n    inputEl.elements[key].value = storageDataObj[key];\n    //   console.log(storageDataObj[key]);\n  }\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  localStorage.removeItem('feedback-form-state');\n  event.currentTarget.reset();\n}\n\n// інакше виконання\n// import Throttle from 'lodash.throttle';\n// // ** находим ссылки на необходимые поля ввода данных\n// const form = document.querySelector('.feedback-form');\n// const email = form.querySelector('[name = \"email\"]');\n// const message = form.querySelector('[name = \"message\"]');\n// // **создаем переменную для хранения длинного ключа\n// // убираем магические стили и строки\n// const localKey = 'feedback-form-state';\n// // **создаем ссылки на наши импуты и форму\n// form.addEventListener('input', Throttle(storageFormData, 500));\n// form.addEventListener('submit', onFormSubmit);\n// // сохраняет написаное в хранилище\n// window.addEventListener('load', checkStorage);\n// function checkStorage() {\n//   // провераяем хранилище на наличие записаных ключей.\n//   if (!localStorage.getItem(localKey)) return;\n//   const formValue = JSON.parse(localStorage.getItem(localKey));\n//   for (const key in formValue) {\n//     form.elements[key].value = formValue[key];\n//   }\n// email.value = formValue.email;\n// message.value = formValue.message;\n// }\n// **функция отправки\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   // // второй способ достать данные\n//   //   const { email, message } = event.currentTarget.elements;\n//   //   console.dir({ email: email.value, message: message.value });\n//   const saveData = JSON.parse(localStorage.getItem(localKey));\n//   console.dir(saveData);\n//   localStorage.removeItem(localKey);\n//   event.currentTarget.reset();\n// }\n// // //** фукнция хранения данных в хранилище\n// function storageFormData(event) {\n//   const formValue = { email: '', message: '' };\n//   // если в нашем обьекте что то есть то добавь новые к существующим\n//   // что б не затирались данные когда вводим в другом поле\n//   if (localStorage.getItem(localKey)) {\n//     Object.assign(formValue, JSON.parse(localStorage.getItem(localKey)));\n//   }\n//   // создаем локальное хранилище записываем данные приводимые к строке\n//   formValue[event.target.name] = event.target.value.trim();\n//   localStorage.setItem(localKey, JSON.stringify(formValue));\n// }\n"],"names":["$945622fd0f572e60$var$inputEl","document","querySelector","addEventListener","event","$945622fd0f572e60$var$formData","target","name","value","localStorage","setItem","JSON","stringify","preventDefault","removeItem","currentTarget","reset","window","storageData","getItem","storageDataObj","parse","console","log","key","elements"],"version":3,"file":"03-feedback.65ce3229.js.map"}